stages:
  - pre-cleanup
  - load
  - build
  - test
  - show_log_on_failure
  - artifact
  - cleanup

pre-run-cleanup:
  stage: pre-cleanup
  script:
    - docker rm -vf influxdb_local || true
    - docker rm -vf influxdb_remote || true
    - docker rm -vf telegraf || true
    - docker rm -vf influx_gateway || true
    - sudo apt-get install dpkg debconf debhelper lintian hashdeep
  when: always

load_local:
  stage: load
  before_script:
    - export PATH=$PATH:/usr/bin
  script:
    - docker rm -vf influxdb_local || true
    - docker run -d  --name influxdb_local -v "$PWD/config/influxdb_local/:/etc/influxdb/" influxdb:latest

load_remote:
  stage: load
  script:
    - docker rm -vf influxdb_remote || true
    - docker run -d --name influxdb_remote -v "$PWD/config/influxdb_local/:/etc/influxdb/" influxdb:latest

load_telegraf:
  stage: load
  script:
    - docker rm -vf telegraf || true
    - docker run  -d --name telegraf -v "$PWD/config/telegraf/:/etc/telegraf/" --link influxdb_remote:influxdb_remote telegraf:latest

build_gateway:
  stage: build
  script:
    - docker build -t influx_gateway .

test_gateway:
  stage: test
  retry: 1
  script:
    - docker rm -vf influx_gateway || true
    - sleep 3
    - docker run  --name influx_gateway --link influxdb_local:influxdb_local --link influxdb_remote:influxdb_remote influx_gateway

show_log:
  stage: show_log_on_failure
  script:
    - echo "Influx_gateway_log"
    - docker logs influx_gateway
  when: on_failure

build_tar_artifact:
  stage: artifact
  script:
    - mkdir -p artifact
    - docker cp influx_gateway:/influx_gateway/influx_gw.py artifact/
    - docker cp influx_gateway:/influx_gateway/tasks.py artifact/
    - docker cp influx_gateway:/influx_gateway/example/config.json artifact/
    - docker cp influx_gateway:/influx_gateway/README.md artifact/
    - docker cp influx_gateway:/influx_gateway/requirements.txt artifact/
    - tar -cvf influx_gateway.tar -C artifact .
  artifacts:
    paths:
      - influx_gateway.tar
  only:
    - master
    - developer

build_deb_artifact:
  stage: artifact
  script:
    - mkdir influx-gw
    - mkdir influx-gw/DEBIAN
    - mkdir -p influx-gw/usr/local/share/influx-gw
    - docker cp influx_gateway:/influx_gateway/influx_gw.py influx-gw/usr/local/share/influx-gw
    - docker cp influx_gateway:/influx_gateway/tasks.py influx-gw/usr/local/share/influx-gw
    - docker cp influx_gateway:/influx_gateway/example/config.json influx-gw/usr/local/share/influx-gw
    - docker cp influx_gateway:/influx_gateway/README.md influx-gw/usr/local/share/influx-gw
    - docker cp influx_gateway:/influx_gateway/requirements.txt influx-gw/usr/local/share/influx-gw
    - docker cp influx_gateway:/influx_gateway/DEBIAN/control influx-gw/DEBIAN/
    - docker cp influx_gateway:/influx_gateway/DEBIAN/cron.d influx-gw/DEBIAN/
    - docker cp influx_gateway:/influx_gateway/DEBIAN/dirs influx-gw/DEBIAN/
    - docker cp influx_gateway:/influx_gateway/DEBIAN/postinst influx-gw/DEBIAN/
    - md5deep -r influx-gw/usr > ~/influx-gw/DEBIAN/md5sums
    - chmod a+x influx-gw/DEBIAN/postinst
    - fakeroot dpkg-deb --build influx-gw
    - lintian influx-gw.deb
  artifacts:
    paths:
      - influx_gateway_${VERSION}_all.deb
  only:
    - master
    - developer

cleanup:
  stage: cleanup
  script:
    - docker rm -vf influxdb_local || true
    - docker rm -vf influxdb_remote || true
    - docker rm -vf telegraf || true
    - docker rm -vf influx_gateway || true
    - rm -rf artifact
    - rm -rf influx-gw*
  when: always
